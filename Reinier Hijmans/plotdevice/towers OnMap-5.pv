import json

size(5000, 5000)
background(0)

def mapValue(value, fromMin, fromMax, toMin, toMax):
    # Figure out how 'wide' each range is
    fromSpan = fromMax - fromMin
    toSpan = toMax - toMin
    
    # Convert the from range into a 0-1 range (float)
    valueScaled = float(value - fromMin) / float(fromSpan)
    
    # Convert the 0-1 range into a value in the to range.
    return toMin + (valueScaled * toSpan)

def xOfDot(lon):
    return mapValue(lon, 3.3810, 7.2028, 1000, WIDTH-1000)

def yOfDot(lat):
    return mapValue(lat, 50.75, 53.487, HEIGHT-1000, 1000)

with open("masten3.json", 'r') as inputFile:
    data = json.load(inputFile)
# :: is for deviding data so you wont have to run the whole json file
for celltower in data[::100]:
    x = xOfDot(celltower['coordinates_lo'])
    y = yOfDot(celltower['coordinates_la'])
    
    typemast = celltower['type']
    if typemast == 'UMTS':
        stroke(RGB, 85/255.0, 98/255.0, 112/255.0)
    elif typemast == 'LTE':
        stroke(RGB, 78/255.0, 205/255.0, 196/255.0)
    elif typemast == 'GSM 900':
        stroke(RGB, 199/255.0, 244/255.0, 100/255.0)
    else: 
        stroke(RGB, 255/255.0, 107/255.0, 107/255.0)
    
    
    nofill()
    diameter = 500.0
    pen(100)
    oval(x, y, diameter, diameter)