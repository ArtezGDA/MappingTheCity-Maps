import json

size(750, 750)
background(1)

def mapValue(value, fromMin, fromMax, toMin, toMax):
    # Figure out how 'wide' each range is
    fromSpan = fromMax - fromMin
    toSpan = toMax - toMin
    
    # Convert the from range into a 0-1 range (float)
    valueScaled = float(value - fromMin) / float(fromSpan)
    
    # Convert the 0-1 range into a value in the to range.
    return toMin + (valueScaled * toSpan)

def xOfDot(lon):
    return mapValue(lon, 3.3810, 7.2028, 0, WIDTH)

def yOfDot(lat):
    return mapValue(lat, 50.75, 53.487, HEIGHT, 0)

with open("masten3.json", 'r') as inputFile:
    data = json.load(inputFile)

for celltower in data:
    x = xOfDot(celltower['coordinates_lo'])
    stroke(1.0, 0.0, 0.5)
    nofill()
    y = yOfDot(celltower['coordinates_la'])
    diameter = 20.0
    oval(x, y, diameter, diameter)